unit CafeMenu;

interface

uses
  System.Generics.Collections, System.SysUtils, MenuIntf, IteratorIntf;
type
  TCafeMenu = class(TInterfacedObject, IMenu)
  private
    TMenuItems: TDictionary<String, IMenu>;
  public
    constructor Create;
    procedure AddItem(Name, Description: String; Vegetarian: Boolean;
      Price: Double);
    function CreateIterator: IIterator;
  end;

implementation

{ TCafeMenu }

procedure TCafeMenu.AddItem(Name, Description: String; Vegetarian: Boolean;
  Price: Double);
begin

end;

constructor TCafeMenu.Create;
begin
  TMenuItems:= TDictionary<string, IMenu>.Create;
   AddItem('Veggie Burger and Air Fries',
      'Veggie burger on a whole wheat bun, lettuce, tomato, and fries',
      True, 3.99);
    AddItem('Soup of the day',
      'A cup of the soup of the day, with a side salad', False, 3.69);
    AddItem('Blueberry Pancakes',
      'Pancakes made with fresh blueberries', True, 3.49);
    AddItem('Burrito',
      'A large burrito, with whole pinto beans, salsa, guacamole', True, 4.29);
end;

function TCafeMenu.CreateIterator: IIterator;
begin

end;

end.
