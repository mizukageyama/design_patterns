unit TestCases;

interface

uses GumballMachine, GumballMachineWithState;

procedure SimpleGumballTestCase;
procedure WinnerTestCase;

implementation

procedure SimpleGumballTestCase;
begin
  var GumballMachine := TGumballMachine.Create(5);

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.EjectQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.EjectQuarter();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);
end;

procedure WinnerTestCase;
begin
  var GumballMachine := TGumballMachineWithState.Create(20);

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);

  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();
  GumballMachine.InsertQuarter();
  GumballMachine.TurnCrank();

  WriteLn(GumballMachine.ToString);
end;

end.
