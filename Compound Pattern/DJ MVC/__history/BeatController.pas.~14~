unit BeatController;

interface

uses
  ControllerIntf, BeatModelIntf, Forms, ViewFrm, ControllerFrm;

type
  TBeatController = class(TInterfacedObject, IController)
  private
    FModel: IBeatModel;
    FDJView: TViewForm;
  public
    constructor Create(AModel: IBeatModel);
    procedure Start;
    procedure Stop;
    procedure IncreaseBPM;
    procedure DecreaseBPM;
    procedure SetBPM(BPM: Integer);
  end;

implementation

{ TBeatController }

constructor TBeatController.Create(AModel: IBeatModel);
begin
  FModel := AModel;
  FDJView := TViewForm.Create(Self, AModel);
end;

procedure TBeatController.DecreaseBPM;
begin
//
end;

procedure TBeatController.IncreaseBPM;
begin
//
end;

procedure TBeatController.SetBPM(BPM: Integer);
begin
//
end;

procedure TBeatController.Start;
begin
//
end;

procedure TBeatController.Stop;
begin
//
end;

end.
