unit ChocolateBoiler;

interface

uses
  System.Classes, System.Generics.Collections, System.SysUtils;

type
  TChocolateBoiler = class
  private
    FEmpty: Boolean;
    FBoiled: Boolean;
  public
    constructor Create;
    procedure Fill;
    procedure Drain;
    procedure Boil;
    function IsEmpty: Boolean;
    function IsBoiled: Boolean;
  end;

implementation

{ TChocolateBoiler }

procedure TChocolateBoiler.Boil;
begin
  if IsEmpty then
  begin
    FEmpty := False;
    FBoiled := False;
    //Fil the boiler with a milk/chocolate mixture
  end;
end;

constructor TChocolateBoiler.Create;
begin
  FEmpty := True;
  FBoiled := False;
end;

procedure TChocolateBoiler.Drain;
begin
  if (not IsEmpty) and IsBoiled then
  begin
    //drain the boiled milk and chocolate
    FEmpty := True;
  end;
end;

procedure TChocolateBoiler.Fill;
begin

end;

function TChocolateBoiler.IsBoiled: Boolean;
begin
  Result := FBoiled;
end;

function TChocolateBoiler.IsEmpty: Boolean;
begin
  Result := FEmpty;
end;

end.
