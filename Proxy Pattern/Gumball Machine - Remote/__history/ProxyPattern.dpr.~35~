program ProxyPattern;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils,
  HasQuarterState in 'HasQuarterState.pas',
  NoQuarterState in 'NoQuarterState.pas',
  SoldOutState in 'SoldOutState.pas',
  SoldState in 'SoldState.pas',
  StateIntf in 'StateIntf.pas',
  WinnerState in 'WinnerState.pas',
  GumballMonitor in 'GumballMonitor.pas',
  GumballMachineProxy in 'GumballMachineProxy.pas',
  GumballMachineIntf in 'GumballMachineIntf.pas',
  System.Generics.Collections;

begin
  try
    var Location := TArray<string>.Create('davao', 'gensan', 'cdo');
    var GumballMachines := TList<TGumballMachineProxy>.Create;

    for var I := 0 to Length(Location) - 1 do
    begin
      GumballMachines.Add(TGumballMachineProxy.Create(0, Location[I]));
    end;

    var GumballMonitor := TGumballMonitor.Create(GumballMachines);
    GumballMonitor.Report;

    WriteLn(sLineBreak + '.... Insert Quarter on Davao ...');
    GumballMachines[0].InsertQuarter;

    WriteLn('.... Insert Quarter and Turn Crank on CDO ...');
    GumballMachines[1].InsertQuarter;
    GumballMachines[1].TurnCrank;

    WriteLn('.... Refill 100 bumball on Gensan ...');
    GumballMachines[2].Refill(100);

    GumballMonitor.Report;

    ReadLn;
  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;
end.
