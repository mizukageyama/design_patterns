unit Whip;

interface

uses
  Beverage, CondimentDecorator;

type
  TWhip = class(TCondimentDecorator)
  private
    FBeverage: TBeverage;
  public
    function GetDescription: String; override;
    function Cost: Double; override;
    constructor Create(ABeverage: TBeverage);
  end;

implementation

{ TWhip }

function TWhip.Cost: Double;
begin
  Result := 0.10 + FBeverage.Cost;
end;

constructor TWhip.Create(ABeverage: TBeverage);
begin
  FBeverage := ABeverage;
end;

function TWhip.GetDescription: String;
begin
  Result := FBeverage.GetDescription + ', Whip';
end;

end.
